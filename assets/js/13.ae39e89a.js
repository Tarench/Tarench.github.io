(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{338:function(t,_,v){"use strict";v.r(_);var a=v(1),l=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("期末时候按着课本总结的，基本考的都总结到了\n")]),t._v(" "),_("h1",{attrs:{id:"第一章-计算机系统概论"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第一章-计算机系统概论"}},[t._v("#")]),t._v(" 第一章 计算机系统概论")]),t._v(" "),_("blockquote",[_("p",[t._v("计算机系统 = 硬件 + 软件")]),t._v(" "),_("ul",[_("li",[t._v("对计算机的某一具体功能既可以用硬件实现，也可以用软件实现")]),t._v(" "),_("li",[t._v("硬件和软件在"),_("strong",[t._v("逻辑功能")]),t._v("上是等效的")]),t._v(" "),_("li",[t._v("实现成本和速度有较大差别")])])]),t._v(" "),_("blockquote",[_("p",[t._v("计算机的系统结构：确定硬件和软件的功能分配\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/20a5eda09ab04912be38ef9386a39125.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_1-计算机系统的硬件组成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-计算机系统的硬件组成"}},[t._v("#")]),t._v(" 1.计算机系统的硬件组成")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("运算器、存储器、控制器、输入设备、输出设备")])]),t._v(" "),_("ul",[_("li",[t._v("运算器：实现对数据的加工，包括算术运算和逻辑运算")]),t._v(" "),_("li",[t._v("存储器：存储数据和程序")]),t._v(" "),_("li",[t._v("控制器：控制计算机各部件有序协调的工作")]),t._v(" "),_("li",[t._v("输入/输出设备：实现外部世界与计算机之间的数据交换")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/b66f5ae42d454c209273f1010987e1ea.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("三个部件：CPU、存储器、I/O设备")]),t._v(" "),_("ul",[_("li",[t._v("==CPU：运算器 + 控制器==")]),t._v(" "),_("li",[t._v("==主机系统：CPU + 内存==")]),t._v(" "),_("li",[t._v("存储器：内存 + 外存")]),t._v(" "),_("li",[t._v("I/O设备：输入输出设备及其相关的接口")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/bd508f98c44f42cb927ce0705632492c.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d7f089ceca6c4299a89a8ae182cfa2fe.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("blockquote",[_("p",[t._v("存储程序原理：在计算机解题之前，要事先编制好程序，并与所需要的数据一起预先存入主存当中。当程序开始执行后，由控制器按照该程序自动地、连续地从存储器中取出指令并执行，直到获得所要求的结果为止。")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/aa1cc40cb55141b89f9dc9a7b9f1c953.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("运算部件：")])]),t._v(" "),_("ul",[_("li",[t._v("运算器(ALU) + 通用寄存器组(GPR)\n运算器用于完成算术和逻辑运算")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("内存：")])]),t._v(" "),_("ul",[_("li",[t._v("内存一般用"),_("strong",[t._v("半导体")]),t._v("技术实现，外存往往用"),_("strong",[t._v("磁盘记录")]),t._v("方式实现")]),t._v(" "),_("li",[t._v("访存操作：读、写\n读：把AR中地址所对应的存储单元的内容读入DR\n写：把DR中中的数据写入AR中地址所对应的存储单元")]),t._v(" "),_("li",[t._v("地址寄存器（AR）：存放访存地址")]),t._v(" "),_("li",[t._v("数据寄存器（DR）：存放从内存读出或写入内存的数据")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("控制器：由6个部分组成")])]),t._v(" "),_("ul",[_("li",[t._v("指令寄存器（IR）：存放当前正在执行的指令")]),t._v(" "),_("li",[t._v("程序计数器（PC）：存刚当前正在执行的指令的地址")]),t._v(" "),_("li",[t._v("指令译码器：对指令进行译码，区分当前指令是什么指令，一遍形成相应的控制信号")]),t._v(" "),_("li",[t._v("时钟脉冲（CP）：协调计算机各部件操作的同步的主时钟。"),_("strong",[t._v("其工作频率叫做计算机的主频")])]),t._v(" "),_("li",[t._v("时序信号发生器：按时间顺序周而复始地发出节拍信号")]),t._v(" "),_("li",[t._v("微操作控制部件：(微操作是硬件电路中不可再细分的简单操作)根据指令的译码结果，结合CP以及时序信号发生器产生的节拍信号，产生该指令执行过程中各节拍所的微操作控制信号，并将它们发送给包括控制器本身在内的各个部件，使之协调、分步骤地进行操作，实现指令的执行。")])])]),t._v(" "),_("h2",{attrs:{id:"_2-软件系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-软件系统"}},[t._v("#")]),t._v(" 2.软件系统")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("系统软件 + 应用软件")]),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8ba72be323024d3c941ae74cb9b140b5.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("p",[t._v("系统软件：保证计算机系统高效、正确地运行的基础软件")]),t._v(" "),_("ul",[_("li",[t._v("操作系统：管理系统资源，为用用程序提供运行环境，为用户提供操作界面")]),t._v(" "),_("li",[t._v("语言处理程序：将用源程序变换为机器语言程序，处理方式有两种：\n解释：逐行处理，边分析边执行\n翻译：用汇编程序或编译程序将源程序全部翻译成"),_("strong",[t._v("目标程序")]),t._v("后，再去执行目标程序")])])]),t._v(" "),_("h2",{attrs:{id:"_3-计算机的性能指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-计算机的性能指标"}},[t._v("#")]),t._v(" 3.计算机的性能指标")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("主频")])]),t._v(" "),_("ul",[_("li",[t._v("CPU的工作节拍是由时钟来控制的，时钟不断产生固定频率的时钟脉冲，这个时钟的频率就是CPU的主频")]),t._v(" "),_("li",[t._v("主要用于评价相同或近似系统结构的计算机的性能，不用在结构差距很大的机器之间")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("运算速度")])]),t._v(" "),_("ul",[_("li",[t._v("每秒执行多少指令/完成多少次浮点运算")]),t._v(" "),_("li",[t._v("单位：MIPS(百万条指令/秒)/MFLOPS(百万次浮点运算/秒)\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/e83aba8e216a4354bc80e197e20e8f6d.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("计算运算速度：混合比率计算法、计算各种指令的执行速度、执行基准程序的运算速度")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("基本字长")])]),t._v(" "),_("ul",[_("li",[t._v("直接参与运算的数据字的二进制位数\n决定==寄存器、ALU、数据总线等的位数==，直接影响硬件的造价")])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("主存容量")])]),t._v(" "),_("ul",[_("li",[t._v("主存所能存储的信息的总容量\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/f066a45706524d3eaa4a404d6e996ac0.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[t._v("主存存取周期")])]),t._v(" "),_("ul",[_("li",[t._v("对主存连续两次访问所允许的最小时间间隔")])]),t._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[t._v("所配置的外部设备及其性能指标")])])]),t._v(" "),_("h1",{attrs:{id:"第二章-数制与编码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第二章-数制与编码"}},[t._v("#")]),t._v(" 第二章 数制与编码")]),t._v(" "),_("h2",{attrs:{id:"_1-带符号数的表示方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-带符号数的表示方法"}},[t._v("#")]),t._v(" 1.带符号数的表示方法")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("原码：")])]),t._v(" "),_("ul",[_("li",[t._v("正数最高位为0")]),t._v(" "),_("li",[t._v("负数最高位为1")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c06bd90766cb40e8a2e2472f11c4b76b.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("2.补码：")]),t._v(" "),_("ul",[_("li",[t._v("正数补码=原码")]),t._v(" "),_("li",[t._v("负数补码：取反+1 "),_("strong",[t._v("（符号位不变）")]),t._v("\n==注意小数的符号位位置==")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/585770b2e25b4e48a4a77093752113e4.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("反码：")])]),t._v(" "),_("ul",[_("li",[t._v("正数反码=原码")]),t._v(" "),_("li",[t._v("负数反码：每位取反 "),_("strong",[t._v("（符号位不变）")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/baf639aed9ad449587d299a8a83b539f.png",alt:"在这里插入图片描述"}}),t._v("\n4. 移码：")]),t._v(" "),_("ul",[_("li",[t._v("与补码仅符号位不同")]),t._v(" "),_("li",[_("strong",[t._v("采用移码的目的是为了能从机器数的形式上直接判断两数真值的大小")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7a71a1612d794a3194d1394804f6c7ff.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_2-数的定点表示与浮点表示"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-数的定点表示与浮点表示"}},[t._v("#")]),t._v(" 2.数的定点表示与浮点表示")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("定点表示：小数点固定")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4fcc1d19fc1f440595753d8f86068c98.png",alt:"在这里插入图片描述"}}),t._v("\n2.浮点表示")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("阶码用移码，尾数用补码")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/145437fa0e074ae39e8ab0d605cfb05d.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/dcbb768f6f0f4ff6be61f853f14065e8.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_3-其他编码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他编码"}},[t._v("#")]),t._v(" 3.其他编码")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("8421（BCD）码")]),t._v(" "),_("li",[t._v("余三码：BCD码 + 0011")])]),t._v(" "),_("ul",[_("li",[t._v("是一种对9的自补码：自身按位取反就得到其对9的补码\n"),_("em",[t._v("十进制数字5的余3码为1000，5对9之补是9－5＝4，而4的余3码是0111，它正好是5的余3码1000按位取反而得。")])]),t._v(" "),_("li",[t._v("两个余3码相加，所产生的进位相应于十进制数的进位，但所产生的和要进行修正后才是正确的余3码。如果没有进位，则和需要减3；如果发生了进位，则和需加3。\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1c9337be8ae8402a966122c424465a62.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("2421码")])])]),t._v(" "),_("h1",{attrs:{id:"第六章-计算机执行程序的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第六章-计算机执行程序的过程"}},[t._v("#")]),t._v(" 第六章 计算机执行程序的过程")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("Load指令：装载寄存器指令")])]),t._v(" "),_("ul",[_("li",[t._v("把一个数据送入指定的寄存器，这个值可以是立即数，也可以是来自存储器的某单元")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("Store指令：存储指令")])]),t._v(" "),_("ul",[_("li",[t._v("把指定寄存器中的数据存入存储器的某个单元")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("Add指令：加法指令")]),t._v(" "),_("li",[t._v("Jump 指令：跳转指令")])])]),t._v(" "),_("h2",{attrs:{id:"_1-load-r1-200-r0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-load-r1-200-r0"}},[t._v("#")]),t._v(" 1.Load R1，200(R0)")]),t._v(" "),_("blockquote",[_("p",[t._v("用[R0]+200作为地址访问存储器，将读出的内容送至R1")])]),t._v(" "),_("ol",[_("li",[t._v("取指：")])]),t._v(" "),_("ul",[_("li",[t._v("将PC的内容传送至地址寄存器AR")]),t._v(" "),_("li",[t._v("从存储器读出第一条指令，放到数据存储器DR")]),t._v(" "),_("li",[t._v("把该指令从DR送到指令寄存器IR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4375d6c21a0f4b6aa1447d4a02bbd453.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8af4f498525d4f589e107198ef39e2d0.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/af4acd205c09496c89aa8461a4564072.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("译码：")])]),t._v(" "),_("ul",[_("li",[t._v("控制器结合时钟脉冲信号CP和时序信号产生器所生成的节拍信号，产生执行该指令所需要的微操作控制信号\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/393d43a4f1464f959f3240b5ce56cec8.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("执行：")])]),t._v(" "),_("ul",[_("li",[t._v("计算访存地址[R0]+200→AR\n具体操作：\n[R0]→ALU，把寄存器R0中的内容（为0）送给ALU，见图中的①\nIR中的操作数“200”→ALU，见图中的②\nALU进行加法运算。结果传送给AR，即[ALU]→AR，见图中的③")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/ec13a6e4b4ff4a8c8d90c8344647f014.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("ul",[_("li",[t._v("从存储器读出数据，送入寄存器R1\n具体操作：\n从存储器中地址为200的存储单元读出数据50，如图中的①所示\nDR→R1,把DR中的50送入R1,如图中的②所示")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/6724cb0e8b5240c8b279a74272e93cc9.png",alt:"在这里插入图片描述"}}),t._v("\n4.PC+4：指向下一条指令，为执行下一条指令做准备\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4393eacfeb75455fb49bd63c10e8f6a6.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("h2",{attrs:{id:"_2-load-r2-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-load-r2-4"}},[t._v("#")]),t._v(" 2.Load R2，#4")]),t._v(" "),_("blockquote",[_("p",[t._v("把指令中的立即数4传送至R2")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("取值：同上\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/ffc8fcdeae6f466b907ca5e8a7490f34.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("译码：同上")])]),t._v(" "),_("li",[_("p",[t._v("执行：")])])]),t._v(" "),_("ul",[_("li",[t._v("将IR中的4送至R2\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7c476dc4c94b404982c1ee21e0234e60.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("PC+4")])]),t._v(" "),_("h2",{attrs:{id:"_3-add-r3-r1-r2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-add-r3-r1-r2"}},[t._v("#")]),t._v(" 3.Add R3，R1，R2")]),t._v(" "),_("blockquote",[_("p",[t._v("把R1和R2中的内容相加，结果存入R3")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("取指")])]),t._v(" "),_("li",[_("p",[t._v("译码\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/026ca66861fa4ca6b95edb7047ce19be.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("执行")])])]),t._v(" "),_("ul",[_("li",[t._v("把R1和R2中的数据送往ALU的两个入口端，ALU做加法运算")]),t._v(" "),_("li",[t._v("把ALU出口端的结果存入R3\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/74d44d981d8b450ba1bb9084fb70959c.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("PC+4")])]),t._v(" "),_("h2",{attrs:{id:"_4-store-r3-200-r2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-store-r3-200-r2"}},[t._v("#")]),t._v(" 4.Store R3，200(R2)")]),t._v(" "),_("blockquote",[_("p",[t._v("把R3中的内容存入地址为[R2]+200的存储单元")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("取指")])]),t._v(" "),_("li",[_("p",[t._v("译码\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/345dbc67dace4b3a961663debb3d3c46.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("执行")])])]),t._v(" "),_("ul",[_("li",[t._v("计算访存地址[R2]+200→AR\n具体操作：\n[R2]→ALU，把寄存器R2中的内容（为4）送给ALU\nIR中的操作数“200”→ALU\nALU的加法运算，[ALU] →AR，ALU 的运算结果（204）送给AR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/729e95fe5c33425ab67cd9796dec7b17.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("[R3]→DR：把R3的内容送DR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/2d9b700f75644053b3ed5e917a521d96.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("[DR]→MEM[AR]：把数据写入存储器\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9d40eb21fc0948f286be1f30492bac1d.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("PC+4")])]),t._v(" "),_("h2",{attrs:{id:"_5-store-r2-208"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-store-r2-208"}},[t._v("#")]),t._v(" 5.Store R2，@(208)")]),t._v(" "),_("p",[t._v("@表示间接寻址")]),t._v(" "),_("blockquote",[_("p",[t._v("[R2]→MEM[MEM [208]]：把寄存器R2中的内容存入主存中地址为MEM[208]的单元中")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("取指")])]),t._v(" "),_("li",[_("p",[t._v("译码\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7c9fc109f7e245e3b82c8ce4281ae9c0.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("执行")])])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("MEM[208]→DR\n具体操作：\n208→AR\nMEM[208]→DR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/a863cf6fae4947548b002f850458d2c1.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("[DR]→AR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/b96567c0bd7c41579abdb428b206864e.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("[R2]→DR\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9a750866049f468b9ed08593cb595d78.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("li",[_("p",[t._v("[DR]→MEM[AR]\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8c177b5adaa14656aceed47a2f8bbda1.png",alt:"在这里插入图片描述"}}),t._v("\n4.PC+4")])])]),t._v(" "),_("h2",{attrs:{id:"_6-jump-1000"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-jump-1000"}},[t._v("#")]),t._v(" 6.Jump 1000")]),t._v(" "),_("blockquote",[_("p",[t._v("让计算机跳转到地址为1000的地方")])]),t._v(" "),_("ol",[_("li",[t._v("取指")]),t._v(" "),_("li",[t._v("译码\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1e8b03f65c9649a79c552d3d34241acc.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("执行")])]),t._v(" "),_("ul",[_("li",[t._v("1000→PC\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/85ecd0d890df4b16832778d72610bf19.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("PC+4")])]),t._v(" "),_("h1",{attrs:{id:"第七章-指令系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第七章-指令系统"}},[t._v("#")]),t._v(" 第七章 指令系统")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("指令集/指令系统：一台计算机所能执行的全部指令的集合")])]),t._v(" "),_("li",[t._v("指令系统决定计算机硬件所能完成的全部功能")]),t._v(" "),_("li",[_("strong",[t._v("指令：要求计算机进行基本操作的命令")])])]),t._v(" "),_("h2",{attrs:{id:"_1-指令格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-指令格式"}},[t._v("#")]),t._v(" 1.指令格式")]),t._v(" "),_("blockquote",[_("p",[t._v("操作码 + 地址码")]),t._v(" "),_("ul",[_("li",[t._v("操作码：描述指令的操作功能")]),t._v(" "),_("li",[t._v("地址码：描述与操作数有关的信息，可以是操作数本身，也可以是存放操作码的地址\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/afc6fabfb51942c9a11e67602fd6c8c1.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("ul",[_("li",[t._v("计算机中，操作数可能存放在"),_("strong",[t._v("主存储器、CPU中的寄存器、I/O接口寄存器或堆栈中")])]),t._v(" "),_("li",[t._v("地址的个数与长度主要取决于指令所涉及的操作数的个数、进行什么操作、存储器的容量、编址单位的大小以及寻址方式等")])]),t._v(" "),_("h3",{attrs:{id:"_1-1-地址码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-地址码"}},[t._v("#")]),t._v(" 1.1 地址码")]),t._v(" "),_("ul",[_("li",[t._v("根据"),_("strong",[t._v("指令中地址码部分显式给出的地址的个数")]),t._v("，将指令格式分为以下5种：")])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("零地址指令：\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/667393508ee94a7a8cc9d9f3ffc08ca3.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ul",[_("li",[t._v("只有操作码，没有地址码")]),t._v(" "),_("li",[t._v("使用零地址的情况：\n指令本身不需要任何操作数（空操作、停机）\n指令中所需的操作数是隐含指定的（堆栈操作）")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("一地址指令\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/841a832447a344ad8cb5a351e124c7ad.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ul",[_("li",[t._v("使用情况：\n指令本身只需要一个操作数（加一、求补、清零），A←OP[A]\n指令需要两个操作数，指令中指明一个操作数，而另一个操作数在默认的累加器AC中，操作结果存放到累加器AC中：AC←[AC]OP[A]")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("二地址指令\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/593cb0dffebe465d8ce04420f93e04aa.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ul",[_("li",[t._v("根据存放操作数的不同分为三种：\n寄存器-寄存器型（R-R型）指令\n存储器-存储器型（M-M型）指令\n寄存器-存储器型（R-M型）指令：结果保留在"),_("strong",[t._v("寄存器")]),t._v("中")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"4"}},[_("li",[t._v("三地址指令\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/6198d23a657e4b6eabc77557356a849e.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("多地址指令")])])]),t._v(" "),_("h3",{attrs:{id:"_1-2-操作码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-操作码"}},[t._v("#")]),t._v(" 1.2 操作码")]),t._v(" "),_("ul",[_("li",[t._v("=="),_("strong",[t._v("指令系统中的每一条指令都有唯一确定的操作码，不同指令的操作码不相同")]),t._v("==")]),t._v(" "),_("li",[t._v("操作码的长度决定指令系统的最大规模")]),t._v(" "),_("li",[t._v("n为操作码，指令系统最多有2^n^条指令")])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("固定长度操作码：")])]),t._v(" "),_("ul",[_("li",[t._v("每条指令的长度都相同")]),t._v(" "),_("li",[t._v("利于简化硬件设计；减少指令译码时间")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("可变长度操作码：")])]),t._v(" "),_("ul",[_("li",[t._v("不同指令的长度随指令功能而不同")]),t._v(" "),_("li",[t._v("使用频率高的指令用段的操作码")]),t._v(" "),_("li",[t._v("缩短操作码的长度，但会使硬件设计复杂化，增加指令译码的时间和难度")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[_("strong",[t._v("扩展操作码技术")]),t._v("：")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("简化硬件设计")])]),t._v(" "),_("li",[_("p",[t._v("当指令总长度一定时，可以使操作码的长度随地址数的增加而减少，不同地址数的指令的操作码的长度也不同，从而有效地缩短指令总长度")])]),t._v(" "),_("li",[_("p",[t._v("包括等长扩展与不等长扩展")])]),t._v(" "),_("li",[_("p",[t._v("=="),_("strong",[t._v("地址长度为n，上层留出m种状态，下一层可扩展出m×2^n^种状态")]),t._v("==")]),t._v(" "),_("p",[t._v("eg.二地址指令条数最大值 = (2^三地址指令操作码位数^ - 三地址指令条数) × 2^二地址操作码位数-三地址操作码位数^")])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/5536045322bd44d1b6cb945a96aec551.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4ec06230238846349d88a6c78cc68242.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h3",{attrs:{id:"_1-3-指令长度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-指令长度"}},[t._v("#")]),t._v(" 1.3 指令长度")]),t._v(" "),_("ul",[_("li",[t._v("一条指令所包含的二进制代码的总位数")]),t._v(" "),_("li",[t._v("主要取决于"),_("strong",[t._v("操作码的长度、操作数地址的长度、操作数地址的个数")])]),t._v(" "),_("li",[t._v("与机器字长有简单的倍数关系：\n单字长指令：指令长度等于机器字长的指令\n半字长指令：指令长度等于半个机器字长的指令\n双字长指令：指令长度等于机器字长的两倍的指令")])]),t._v(" "),_("blockquote",[_("p",[t._v("机器字长：计算机能直接处理的二进制数据的位数")])]),t._v(" "),_("ul",[_("li",[t._v("指令字长一般为字节的整数倍")])]),t._v(" "),_("h2",{attrs:{id:"_2-数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型"}},[t._v("#")]),t._v(" 2.数据类型")]),t._v(" "),_("ul",[_("li",[t._v("数据表示：计算机硬件能够直接识别、指令 系统可以直接调用的数据类型")]),t._v(" "),_("li",[t._v("数据结构：由软件进行处理和实现的各种数据类型")])]),t._v(" "),_("blockquote",[_("p",[t._v("表示操作数的方法：")]),t._v(" "),_("ol",[_("li",[t._v("由指令中的操作码指定操作数的类型")]),t._v(" "),_("li",[t._v("给数据加上标识符（tag），有数据本身给出操作数类型")])])]),t._v(" "),_("ul",[_("li",[t._v("操作数的大小：操作数的位数或字节数\n包括：字节（8位）、半字（16位）、 字（32位）、  双字（64位）")]),t._v(" "),_("li",[t._v("字符一般用ASCII码表示，大小为一个字节")]),t._v(" "),_("li",[t._v("整数用二进制补码表示，大小可以是字节、半字、单字和双字")]),t._v(" "),_("li",[t._v("浮点数分为单精度浮点数（单字）和双精度浮点数（双字）")]),t._v(" "),_("li",[t._v("所有计算机采用IEEE754浮点标准")])]),t._v(" "),_("h2",{attrs:{id:"_3-寻址方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-寻址方式"}},[t._v("#")]),t._v(" 3.寻址方式")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("计算机中，操作数可能存放在"),_("strong",[t._v("主存储器、CPU中的寄存器、I/O接口寄存器或堆栈中")])])]),t._v(" "),_("li",[_("p",[t._v("形式地址与有效地址")])]),t._v(" "),_("li",[_("p",[t._v("寻址方式：确定指令操作数有效地址的方法")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("直接寻址")])]),t._v(" "),_("ul",[_("li",[t._v("在指令的地址码字段直接给出操作数所在主存单元的地址 ==EA = A==")]),t._v(" "),_("li",[t._v("简单、快速的寻址方式，但寻址范围受限于地址码字段的位数")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/eae699c806984fe2bdb57bbc1f7722ee.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("间接寻址")])]),t._v(" "),_("ul",[_("li",[t._v("指令的地址码字段给出的是操作数所在内存单元的地址的地址，即指令中形式地址所指定的内存单元中存放的内容才是操作数的真正地址 ==EA = (A)==")]),t._v(" "),_("li",[t._v("得到操作数需要访问两次内存，指令的执行速度比较慢")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4846d5ca06e34c729e7c15b434f22a45.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("立即寻址")])]),t._v(" "),_("ul",[_("li",[t._v("指令的地址码字段直接给出操作数本身")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"4"}},[_("li",[t._v("寄存器直接寻址与间接寻址")])]),t._v(" "),_("ul",[_("li",[t._v("寄存器直接寻址：指令的地址码字段给出一个"),_("strong",[t._v("寄存器编号")]),t._v("，该寄存器中存放的内容就是操作数 ==EA = R~i~==")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/6efd6952b0a64811aa29a192c2b8f3d2.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("ul",[_("li",[t._v("寄存器间接寻址：寄存器中存放的内容是操作数的地址，根据此地址访问内存取得操作数 ==EA = (R~i~)==")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7565a450126446a0943530ac6068a26d.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"5"}},[_("li",[t._v("隐含寻址")])]),t._v(" "),_("ul",[_("li",[t._v("指令中不给出操作数的地址")]),t._v(" "),_("li",[t._v("通常操作数约定在某个特定的寄存器中或者在堆栈中")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"6"}},[_("li",[t._v("相对寻址")])]),t._v(" "),_("ul",[_("li",[t._v("有效地址 = 形式地址（偏移量） + PC的内容 ==EA = (PC) + D==(D是==补码==表示！！！)")]),t._v(" "),_("li",[t._v("==注意取址后PC自动+'1'==")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/85938cdd54cc4e20a4374e7d1a471136.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"7"}},[_("li",[t._v("变址寻址")])]),t._v(" "),_("ul",[_("li",[t._v("有效地址 = 形式地址 + 变址寄存器的内容 ==EA = (R~X~) + D==")]),t._v(" "),_("li",[t._v("==形式地址固定，变的是变址寄存器的内容==")]),t._v(" "),_("li",[t._v("变址寄存器可以是专用寄存器，也可以是通用寄存器中的一个")]),t._v(" "),_("li",[t._v("常用于字符串处理、数组运算等成批数据处理中，主要是面向用户，解决"),_("strong",[t._v("程序循环")]),t._v("控制问题")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/079938364fd54df4a24efe9a4cc0bbc9.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("8.基址寻址")]),t._v(" "),_("ul",[_("li",[t._v("有效地址 = 详细地址 + 基址寄存器的内容 ==EA = (R~B~) + D==")]),t._v(" "),_("li",[t._v("==基地址固定，变的是形式地址==")]),t._v(" "),_("li",[t._v("基址寄存器的内容称为基地址，常由操作系统或管理程序设定")]),t._v(" "),_("li",[t._v("面向系统，解决程序重定位和扩大寻址空间等问题")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/303a71913c5e4f9bafe8a0dc38221d67.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"9"}},[_("li",[t._v("“基址+变址”寻址")])]),t._v(" "),_("ul",[_("li",[t._v("有效地址 = 形式地址 + 基址寄存器R~B~的内容 + 变址寄存器R~X~的内容 ==EA = (R~B~)+(R~X~)+D==")])])]),t._v(" "),_("h3",{attrs:{id:"习题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#习题"}},[t._v("#")]),t._v(" 习题")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c3bf74c400e245a08eec890a4b488d11.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("blockquote",[_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9e2a2ceab34b49e29198b2f8d42c736e.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/b3300befe9264b05b5fa0a691a2b2a7e.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/5aae61a039f14182b2922ec33222743e.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4f60f7f1825348c283d4a5655cc7677b.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9563b67632684663a2636d9c6cf16fe1.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/103a690ebbf34c34bc9cb5d4f7cf8cd8.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/fafa2773dc4a46539001558cbaeaa6ba.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/5fc90b8d34bf4e8ca3cf7d2a20556ba4.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/32270ec848d24bed9ca681dbb0f0eb33.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("h2",{attrs:{id:"_4-指令类型与功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-指令类型与功能"}},[t._v("#")]),t._v(" 4.指令类型与功能")]),t._v(" "),_("ul",[_("li",[t._v("一个指令系统中的指令可以按功能分为"),_("strong",[t._v("数据传送类指令、数据运算类指令、程序控制类指令、输入输出类指令")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("数据传输类指令")])]),t._v(" "),_("ul",[_("li",[t._v("将数据从一个地方传送到另一个地方")]),t._v(" "),_("li",[t._v("主要实现主存和主存之间、主存和寄存器之间、寄存器和寄存器之间的数据传送")]),t._v(" "),_("li",[t._v("数据传送指令一次可以传送一个数据，也可以一次传送一批数据")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("数据运算类指令")])]),t._v(" "),_("ul",[_("li",[t._v("用来实现数据的算术运算、逻辑运算和移位运算")]),t._v(" "),_("li",[t._v("算术运算：加、减、乘、除运算；加1 、减1；比较指令等")]),t._v(" "),_("li",[t._v("逻辑运算：包括与、或、非 、异或等运算")]),t._v(" "),_("li",[t._v("移位指令：算术移位、逻辑移位和循环移位三类，它们又可分为左移和右移两种")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("程序控制类指令")])]),t._v(" "),_("ul",[_("li",[t._v("主要用来控制程序执行的顺序和方向")]),t._v(" "),_("li",[t._v("包含转移指令、子程序调用和返回指令、自陷指令等")])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"4"}},[_("li",[t._v("输入输出指令")])]),t._v(" "),_("ul",[_("li",[t._v("主要用于实现主机与外部设备之间的信息交换")])])]),t._v(" "),_("h2",{attrs:{id:"_5-指令系统的设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-指令系统的设计"}},[t._v("#")]),t._v(" 5.指令系统的设计")]),t._v(" "),_("ul",[_("li",[t._v("包括指令的 =="),_("strong",[t._v("功能设计")]),t._v("和"),_("strong",[t._v("指令格式设计")]),t._v("==")]),t._v(" "),_("li",[t._v("在确定哪些基本功能用硬件来实现时，主要考虑3个因素："),_("strong",[t._v("速度、成本、灵活性")]),t._v("\n硬件实现：速度快，成本高，灵活性差\n软件实现：速度慢，价格便宜，灵活性好")])]),t._v(" "),_("h3",{attrs:{id:"_5-1-对指令系统的基本要求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-对指令系统的基本要求"}},[t._v("#")]),t._v(" 5.1 对指令系统的基本要求")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("对指令系统的基本要求：完整性、规整性、正交性、高效率、兼容性")])]),t._v(" "),_("li",[t._v("规整性包括对称性和均匀性")])]),t._v(" "),_("h3",{attrs:{id:"_5-2-指令格式的设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-指令格式的设计"}},[t._v("#")]),t._v(" 5.2 指令格式的设计")]),t._v(" "),_("ul",[_("li",[t._v("确定操作码字段和地址码字段的大小及其组合形式")]),t._v(" "),_("li",[t._v("确定各种寻址方式的编码方法")]),t._v(" "),_("li",[t._v("三种常见的指令编码格式："),_("strong",[t._v("可变长度编码格式、固定长度编码格式、混合型编码格式")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("可变长度编码格式：多用于CISC\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8bdb7ddff9bb4df98dee760d080b4000.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("固定长度编码格式：多用于RISC\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7319918108be4d34aec3495d4ab6f7f9.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("混合型编码格式\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/61f409adf1154354850876b122dcf5a1.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h2",{attrs:{id:"_6-指令系统的改变和发展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-指令系统的改变和发展"}},[t._v("#")]),t._v(" 6.指令系统的改变和发展")]),t._v(" "),_("ul",[_("li",[t._v("=="),_("strong",[t._v("指令集分为复杂指令集合精简指令集")]),t._v("==")])]),t._v(" "),_("blockquote",[_("p",[t._v("复杂指令系统计算机CISC：")]),t._v(" "),_("ul",[_("li",[t._v("强化指令功能，实现软件功能向硬件功能转移")]),t._v(" "),_("li",[t._v("特点：指令数量多，功能多样")]),t._v(" "),_("li",[_("strong",[t._v("缺点")]),t._v("：各指令使用频率相差悬殊，许多指令很少用得到；指令系统庞大，指令条数多，许多指令的功能很复杂；CPI值大，执行速度慢；规整性不好，不利于采用流水线技术提高性能")])])]),t._v(" "),_("blockquote",[_("p",[t._v("精简指令功能计算机RISC：")]),t._v(" "),_("ul",[_("li",[t._v("尽可能降低指令系统的复杂性，以达到简化实现，提高性能的目的")]),t._v(" "),_("li",[_("strong",[t._v("设计原则")]),t._v("：\n指令条数少、指令功能简单；\n采用简单而又统一的指令格式，并减少寻址方式；\n指令的执行在单个机器周期内完成；采用load-store结构；\n大多数指令采用硬连逻辑来实现；\n强调优化编译器的作用，为高级语言程序生成优化的代码；\n充分利用流水技术来提高性能")])])]),t._v(" "),_("h2",{attrs:{id:"_7-指令系统实例-mips的指令系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-指令系统实例-mips的指令系统"}},[t._v("#")]),t._v(" 7.指令系统实例：MIPS的指令系统")]),t._v(" "),_("ul",[_("li",[t._v("典型的RISC结构")])]),t._v(" "),_("blockquote",[_("p",[t._v("MIPS的寄存器：")]),t._v(" "),_("ul",[_("li",[t._v("32个64位的通用寄存器，R0的值永远是0")]),t._v(" "),_("li",[t._v("32个64位浮点数寄存器")]),t._v(" "),_("li",[t._v("其他特殊寄存器，如浮点状态寄存器")])])]),t._v(" "),_("blockquote",[_("p",[t._v("MIPS的数据表示")]),t._v(" "),_("ul",[_("li",[t._v("整数：字节、半字、字、双字")]),t._v(" "),_("li",[t._v("浮点数：单精度、双精度\n字节、半字或者字在装入64位寄存器时，用零扩展或者"),_("strong",[t._v("用符号位扩展来填充该寄存器的剩余部分")]),t._v("。装入以后，对它们将按照64位整数的方式进行运算")])])]),t._v(" "),_("blockquote",[_("p",[t._v("MIPS的数据寻址方式")]),t._v(" "),_("ul",[_("li",[t._v("立即数寻址和偏移量寻址")]),t._v(" "),_("li",[t._v("两种寻址方式都是16位")]),t._v(" "),_("li",[t._v("寄存器间接寻址是通过把0作为偏移量来实现的")]),t._v(" "),_("li",[t._v("16位直接寻址是通过把R0（其值永远为0）作为基址寄存器来完成的")]),t._v(" "),_("li",[t._v("MIPS的寻址方式是编码到操作码OP中的")]),t._v(" "),_("li",[t._v("MIPS的存储器是按字节寻址的，地址为64位")]),t._v(" "),_("li",[t._v("所有存储器访问都必须是边界对齐的")])])]),t._v(" "),_("blockquote",[_("p",[t._v("MIPS的指令格式")]),t._v(" "),_("ul",[_("li",[t._v("所有指令都是32位，操作码占6位")]),t._v(" "),_("li",[t._v("共有三种格式："),_("strong",[t._v("I类指令、R类指令、J类指令")]),t._v("，三种指令格式中，同名字段的位置固定不变")])]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("I类指令")])])]),t._v(" "),_("ul",[_("li",[t._v("包括所有的load和store指令，立即数指令，分支指令，寄存器跳转指令，寄存器链接跳转指令")]),t._v(" "),_("li",[t._v("立即数字段为16位，用于提供立即数或偏移量\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/bb0a5a06f4894f6d9ae17cce08b8767d.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/302200c8b51e47fb8b0130ba08ac6250.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[_("strong",[t._v("R类指令")])])]),t._v(" "),_("ul",[_("li",[t._v("包括ALU指令，专用寄存器读/写指令，move指令等\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/a7326393884b40dfb7af4cdb1c55f40a.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/315342e328eb44f8bc4caf8d6510ba16.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("J类指令")])]),t._v(" "),_("ul",[_("li",[t._v("包括跳转指令，跳转并链接指令，自陷指令，异常返回指令")]),t._v(" "),_("li",[t._v("在这类指令中，指令字的低26位是偏移量，它与PC值相加形成跳转的地址\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1a19ea4a4a9f4584bd9cf586858c6b03.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("p",[t._v("MIPS的操作")]),t._v(" "),_("ul",[_("li",[t._v("可分为四大类：\nload和store（I类）\nALU操作（R类）\n分支与跳转（J类）\n浮点操作")]),t._v(" "),_("li",[t._v("要求内存"),_("strong",[t._v("边界对齐")]),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/98a8cc5ece3f4707819957f6c0bae65f.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h1",{attrs:{id:"第八章-中央处理器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第八章-中央处理器"}},[t._v("#")]),t._v(" 第八章 中央处理器")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("=="),_("strong",[t._v("CPU的组成：ALU、通用寄存器组、控制器")]),t._v("==")])]),t._v(" "),_("li",[_("p",[t._v("=="),_("strong",[t._v("CPU的基本功能：指令顺序控制、操作控制、时间控制、数据加工")]),t._v("==")])]),t._v(" "),_("li",[_("p",[t._v("指令执行的基本步骤：取指令、译码、执行、（PC+1）\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/25be87a8b675446fac58a8c0dd8382f7.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h2",{attrs:{id:"_1-关于模型机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-关于模型机"}},[t._v("#")]),t._v(" 1.关于模型机")]),t._v(" "),_("blockquote",[_("p",[t._v("模型机是MIPS结构的一种简单实现，实现了MIPS指令系统的核心子集")])]),t._v(" "),_("blockquote",[_("p",[t._v("包含指令：")]),t._v(" "),_("ul",[_("li",[t._v("算术运算指令：==R类==\nadd、sub、and、or、slt，其操作码字段 ==OP=0==")]),t._v(" "),_("li",[t._v("存储器访问指令：==I类==\nlw（load word，op=35）、sw（store word，Op=43）")]),t._v(" "),_("li",[t._v('等于"0"分支：==I类==\nbeqz，==OP=63==')])])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("指令字长都是4个字节（32位）")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("R类指令格式：\nOP——操作码字段\nrs——第一源操作数字段\nrt——第二源操作数字段\nrd——目标操作数字段（或结果字段）\nshamt——无用\nfunct——ALU指令的运算函数码字段")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1ab1b3bb8ca24df9824a4349c82c1653.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("I类指令格式：\nrs——基址寄存器字段，对于beqz指令来说，是存放被检测的数据\nadr——偏移量字段，rs和adr用于计算访存有效地址或分支目标地址\nrt——对于load指令来说，rt所指出的寄存器是存放所取的数据；对于store指令来说，是存放要写入存储器的数据")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/3ceab1a078a04839bf3ef075ff0da508.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_2-逻辑设计的约定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-逻辑设计的约定"}},[t._v("#")]),t._v(" 2.逻辑设计的约定")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("CPU设计中的两种部件：对数据值进行操作的部件（组合逻辑电路）、包含状态的电路（时序电路）")])]),t._v(" "),_("li",[t._v("组合逻辑电路：没有内部状态，其输出仅依赖于当前的输入，与过去的值无关。在任何时候，对于相同的输入总是得到相同的输出")]),t._v(" "),_("li",[t._v("时序电路：状态部件的当前输出是前一个时钟周期写进去的值")])]),t._v(" "),_("h2",{attrs:{id:"_3-实现mips的一个基本方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现mips的一个基本方案"}},[t._v("#")]),t._v(" 3.实现MIPS的一个基本方案")]),t._v(" "),_("h3",{attrs:{id:"_3-1-构建基本数据通路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-构建基本数据通路"}},[t._v("#")]),t._v(" 3.1 构建基本数据通路")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("两种典型的数据通路组织方式：基于总线的结构、直接连接")])])]),t._v(" "),_("blockquote",[_("p",[t._v("基本部件：\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7110295b45ee4a3aac964af94fb4d8bc.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("取指令的数据通路\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d372bebad8764a0da0ab2c0d8fe702af.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("R类指令的数据通路\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/97a63dfb5c2c4947bdfccee582f62187.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("load指令的数据通路")])]),t._v(" "),_("ul",[_("li",[t._v("把指令字中的16位偏移量字段进行符号位扩展，变成32位数，送给ALU")]),t._v(" "),_("li",[t._v("用IR[rs]作为地址去访问寄存器组Reg，读出的操作数送给ALU，与上一步扩展了的地址相加，计算出访存的有效地址，将之送到数据存储器DM的地址输入端DA")]),t._v(" "),_("li",[t._v("从DM读出数据（将DMRead设置为有效），将该数据送到通用寄存器组的数据入口端WD，写入由IR[rt]指定的寄存器\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/6d9d1e5fdbc64a2eb4fb72282a68057c.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"4"}},[_("li",[t._v("store指令的数据通路\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/26d2e89bfce04860b23d05a00c202b0c.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"5"}},[_("li",[t._v("beqz指令")])]),t._v(" "),_("ul",[_("li",[t._v("把指令字中的16位偏移量字段（IR[adr]）进行符号位扩展，变成32位数，并"),_("strong",[t._v("左移两位")]),t._v("送给ALU")]),t._v(" "),_("li",[t._v("把PC＋4送给ALU的另一个输入，与上一步符号位扩展和左移后的地址相加，得到转移目标地址")]),t._v(" "),_("li",[t._v("用IR[rs]作为地址去访问寄存器组Reg，读出操作数并送给判0部件。由该部件的输出确定是否分支成功")]),t._v(" "),_("li",[t._v("如果为真，转移目标地址就成为新的PC值，分支成功；否则就用PC＋4代替PC中的值，分支失败\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/27742fe78803481c82a0342016737a1e.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h3",{attrs:{id:"_3-2-alu控制器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-alu控制器"}},[t._v("#")]),t._v(" 3.2 ALU控制器")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("模型机中控制器分为主控制器与ALU控制器")]),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1f8a7a0785eb4f8e87baf06091963308.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/59fcffefed5c4432af0b29e386079d10.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("ALUOp的定义：")]),t._v(" "),_("ul",[_("li",[t._v("load指令和store指令：\n==ALUOp=00==，让ALU做加法，计算访存的有效地址")]),t._v(" "),_("li",[t._v("beqz指令：\n==ALUOp=00==，让ALU做加法，计算分支目标地址")]),t._v(" "),_("li",[t._v("R类指令\n==ALUOp=10==，ALU完成and、or、add、sub中的某一个，具体取决于指令中funct字段的值")])])]),t._v(" "),_("h3",{attrs:{id:"_3-3-单周期数据路径的控制器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-单周期数据路径的控制器"}},[t._v("#")]),t._v(" 3.3 单周期数据路径的控制器")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d94af5c2030a4ada9da8415fa28638dc.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("h2",{attrs:{id:"_4-多周期实现方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-多周期实现方案"}},[t._v("#")]),t._v(" 4.多周期实现方案")]),t._v(" "),_("blockquote",[_("p",[t._v("单周期的缺点")]),t._v(" "),_("ul",[_("li",[t._v("效率低")]),t._v(" "),_("li",[t._v("单周期时间只能去最长的数据通路所花的时间")]),t._v(" "),_("li",[t._v("每个时钟周期中功能部件最多被使用一次")])])]),t._v(" "),_("ul",[_("li",[t._v("多周期采用更短的时间作为时钟周期，允许指令的执行时间为多个时钟周期")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d7b381977c4d45609829bea4c6a9041f.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("blockquote",[_("p",[t._v("按周期分步：")]),t._v(" "),_("ul",[_("li",[t._v("取指令周期(IF)")]),t._v(" "),_("li",[t._v("指令译码/读存储器周期(ID)")]),t._v(" "),_("li",[t._v("执行/有效地址计算周期(EX)")]),t._v(" "),_("li",[t._v("存储器访问/R类指令和分支指令完成周期(MEM)")]),t._v(" "),_("li",[t._v("写回周期(WB)")])])]),t._v(" "),_("h2",{attrs:{id:"_5-控制器的设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-控制器的设计"}},[t._v("#")]),t._v(" 5.控制器的设计")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("实现控制器的技术：硬连逻辑、微程序设计")])])]),t._v(" "),_("blockquote",[_("p",[t._v("控制器的组成：")]),t._v(" "),_("ol",[_("li",[t._v("指令部件包括：")])]),t._v(" "),_("ul",[_("li",[t._v("程序计数器PC")]),t._v(" "),_("li",[t._v("指令寄存器IR")]),t._v(" "),_("li",[t._v("指令译码器ID")]),t._v(" "),_("li",[t._v("地址形成部件")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("时序控制部件")]),t._v(" "),_("li",[t._v("微操作控制信号形成部件")]),t._v(" "),_("li",[t._v("中断控制逻辑")]),t._v(" "),_("li",[t._v("程序状态寄存器PSR")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/51f4d65e2f9841f384d1ae9592014d4c.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("控制方式：")]),t._v(" "),_("ul",[_("li",[t._v("同步控制方式：机器有统一的时钟信号（称为系统时钟），所有的微操作控制信号都与时钟信号同步")]),t._v(" "),_("li",[t._v("异步控制方式：各部件之间没有统一的时钟和节拍，而是各部件有自己的时钟")])])]),t._v(" "),_("blockquote",[_("p",[t._v("时序系统： =="),_("strong",[t._v("计算机的三级时序系统：指令周期、节拍、脉冲")]),t._v("==")]),t._v(" "),_("ul",[_("li",[t._v("指令周期：从取指令、分析指令到执行完该指令所需的全部时间，"),_("strong",[t._v("一般由若干时钟周期构成")])]),t._v(" "),_("li",[t._v("节拍：节拍的宽度（时间）一般语系统的时钟周期数相同")]),t._v(" "),_("li",[t._v("脉冲")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/9679aaf9a38d49eca0e263f431fa83ac.png",alt:"在这里插入图片描述"}}),t._v("\n每个指令周期包含5个节拍T0～T4，每个节拍有一个脉冲")])]),t._v(" "),_("h1",{attrs:{id:"第九章-微程序控制器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第九章-微程序控制器"}},[t._v("#")]),t._v(" 第九章 微程序控制器")]),t._v(" "),_("ul",[_("li",[t._v("组合逻辑控制器的缺点：\n设计复杂、繁琐，缺乏规律性，设计效率低\n不易修改和扩充，缺乏灵活性")]),t._v(" "),_("li",[t._v("微程序技术能很好的解决上述问题，但速度比较慢")])]),t._v(" "),_("h2",{attrs:{id:"_1-基本原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本原理"}},[t._v("#")]),t._v(" 1.基本原理")]),t._v(" "),_("ul",[_("li",[t._v("用二进制编码字（微指令字）来代替组合逻辑控制器中的微操作控制信号的产生")]),t._v(" "),_("li",[t._v("把在一条指令的执行过程中各节拍要进行的微操作集合都用一个微指令字来表示，然后把他们按节拍的先后顺序存放到一个特殊的存储器中（称为控制存储器CM）")]),t._v(" "),_("li",[t._v("执行该指令时，按顺序依次读出微指令字")])]),t._v(" "),_("blockquote",[_("ul",[_("li",[t._v("微命令：构成控制信号序列的"),_("strong",[t._v("最小单位")])]),t._v(" "),_("li",[t._v("微操作：执行部件接受微命令后进行的最基本的、不可再细分的操作，分为相容的微操作和互斥的微操作")]),t._v(" "),_("li",[t._v("微指令：用来产生微控制信号的二进制编码字")]),t._v(" "),_("li",[t._v("微程序：一系列微指令构成的有序集合，"),_("strong",[t._v("每条机器指令都对应于一段微程序")])]),t._v(" "),_("li",[t._v("微指令周期：微程序控制器的工作周期")])])]),t._v(" "),_("h2",{attrs:{id:"_2-微程序控制器的组成与工作过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-微程序控制器的组成与工作过程"}},[t._v("#")]),t._v(" 2.微程序控制器的组成与工作过程")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/73523ec2860a4a3996beaa6c546dcd41.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("控制存储器CM")])]),t._v(" "),_("ul",[_("li",[t._v("存放实现整个指令系统的所有微程序")]),t._v(" "),_("li",[t._v("每个单元存放一条微指令字")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("微指令寄存器μIR")])]),t._v(" "),_("ul",[_("li",[t._v("用来存放从控存读出的当前微指令")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("微地址形成电路")])]),t._v(" "),_("ul",[_("li",[t._v("根据控制地址字段中的信息产生后续微地址")])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("微地址寄存器μMAR")])]),t._v(" "),_("ul",[_("li",[t._v("接受微地址形成电路送来的地址，为读取下一条微指令做好准备")])]),t._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[t._v("地址译码器")])]),t._v(" "),_("ul",[_("li",[t._v("将μMAR中的微地址进行译码，找到被访问的控存单元，将其中的微指令读出并存放于μIR中")])])]),t._v(" "),_("blockquote",[_("p",[t._v("=="),_("strong",[t._v("微程序控制器的工作过程")]),t._v("==")]),t._v(" "),_("ol",[_("li",[t._v("启动取指微程序，把要执行的机器指令（其地址由PC给出）从主存取到指令寄存器IR中，并完成对PC的增量操作")]),t._v(" "),_("li",[t._v("根据IR中指令的操作码，微地址形成电路产生该指令的微程序的入口地址，并送入μMAR")]),t._v(" "),_("li",[t._v("μMAR中的微地址经过译码，从控存中读取相应的微指令，送入μIR")]),t._v(" "),_("li",[t._v("μIR中微指令的操作控制字段直接（或经过译码）产生一组微命令，送往相应的功能部件，控制它们完成所规定的微操作")]),t._v(" "),_("li",[t._v("微地址形成电路根据μIR中微指令的地址控制字段和机器的状态信息（如程序状态字PSW），产生下一条微指令的地址并送往μMAR")]),t._v(" "),_("li",[t._v("重复上述步骤第三到第五步，直到该机器指令的微程序全部执行完毕")])])]),t._v(" "),_("h2",{attrs:{id:"_3-微程序设计技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-微程序设计技术"}},[t._v("#")]),t._v(" 3.微程序设计技术")]),t._v(" "),_("h3",{attrs:{id:"_3-1-微指令的编码方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-微指令的编码方法"}},[t._v("#")]),t._v(" 3.1 微指令的编码方法")]),t._v(" "),_("ul",[_("li",[t._v("微指令 = 微操作控制字段 + 地址控制字段")]),t._v(" "),_("li",[_("strong",[t._v("四种方法：直接控制编码、最短字长编码、分段直接编码、分段间接编码")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("直接控制编码法")])]),t._v(" "),_("ul",[_("li",[t._v("微操作控制字段的每一位直接对应一个微操作：当某位为1时，就表示执行相应的微操作；为0时就不执行该微操作")]),t._v(" "),_("li",[t._v("优点：结构简单，并行性最好，操作速度快")]),t._v(" "),_("li",[t._v("缺点：微指令字太长")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/07c8d93ec240466ca92a5bc24bcebdf9.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("最短字长编码法")])]),t._v(" "),_("ul",[_("li",[t._v("将所有的微命令进行统一的二进制编码，每条指令只定义一个微操作")]),t._v(" "),_("li",[t._v("微操作控制字段的长度L与微命令的总数N的关系：==L ≥ log2N==")]),t._v(" "),_("li",[t._v("需要对整个微操作控制字段进行编码")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/4eb689aa75774e8f9b63aadbd3eb6684.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("字段直接编码法")])]),t._v(" "),_("ul",[_("li",[t._v("把微操作控制字段进一步划分为若干个字段，每个字段单独编码，每个码点表示一个微命令")]),t._v(" "),_("li",[_("strong",[t._v("字段之间采用直接控制，字段内部采用最短字长编码")])]),t._v(" "),_("li",[t._v("既能缩短微指令字长，又能实现较高的并行性，执行速度比较快。")]),t._v(" "),_("li",[t._v("=="),_("strong",[t._v("设计原则：")]),t._v("== 把互斥的微操作分在同一字段，把相容的微操作分到不同的字段；字段的划分应与数据通路相适应；一般每个字段应留出一个码点，用于表示不发任何微命令")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/077ba65b8baf48878a82d834d0301380.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"4"}},[_("li",[t._v("字段间接编码法（"),_("em",[t._v("了解")]),t._v("）")])]),t._v(" "),_("ul",[_("li",[t._v("字段的编码的含义（即表示什么微命令）要由另外一个字段的编码来解释确定")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c86307b52800410bb6f9559f4d3e6e42.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h3",{attrs:{id:"_3-2-微指令格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-微指令格式"}},[t._v("#")]),t._v(" 3.2 微指令格式")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("分为两大类：水平型微指令和垂直型微指令")])])]),t._v(" "),_("h3",{attrs:{id:"_3-3-微程序的顺序控制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-微程序的顺序控制"}},[t._v("#")]),t._v(" 3.3 微程序的顺序控制")]),t._v(" "),_("blockquote",[_("p",[t._v("微程序入口地址的形成：")]),t._v(" "),_("ul",[_("li",[t._v("公用的“取指令”微程序一般存放在控存中第0号单元或其它指定的控存单元开始的一片控存区域中。（这个地址是固定不变的）")]),t._v(" "),_("li",[t._v("根据IR中的操作码，找到该指令所对用的微程序的入口地址\n两种实现方法：")])]),t._v(" "),_("ol",[_("li",[t._v("直接对应法")])]),t._v(" "),_("ul",[_("li",[t._v("直接把操作码与微地址码的部分位对应")]),t._v(" "),_("li",[t._v("适用于所有指令的操作码的位数和位置都相同时")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("查表法：")])]),t._v(" "),_("ul",[_("li",[t._v("在操作码的位数或位置不固定的情况下，需要用专门的硬件实现操作码到入口地址的映象")]),t._v(" "),_("li",[t._v("用"),_("strong",[t._v("PLA")]),t._v("或"),_("strong",[t._v("ROM")]),t._v("实现一个表格，该表格给出了各操作码所对应的微程序的入口地址")]),t._v(" "),_("li",[t._v("使用该表时，只要用操作码作为输入，就能在其输出端得到该指令的微程序入口地址")])])]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("后继微地址的形成")]),t._v("：")]),t._v(" "),_("ol",[_("li",[t._v("增量方式")])]),t._v(" "),_("ul",[_("li",[t._v("顺序执行时，给μPC增加一个增量（通常为1）给出下一条微指令的地址\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1f4aa45d4eac4488a09bbdad6a4c704a.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("转移控制字段BCF用于固定是顺序实行还是转移，如果是转移，就有BCF指出转移地址的来源")]),t._v(" "),_("li",[t._v("转移地址字段BAF")]),t._v(" "),_("li",[t._v("转移地址的来源："),_("strong",[t._v("由BAF给出的地址；机器指令所对应的微程序的入口地址；微子程序入口地址和返回地址（存放在返回地址寄存器中）")])]),t._v(" "),_("li",[t._v("优点：SCF字段比较短，后继微地址生成逻辑比较简\n单，编制微程序也比较容易")]),t._v(" "),_("li",[t._v("缺点：不能直接实现多路转移")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1dc43bf8a56e46a3a3a81951d4f943cb.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("断定方式")])]),t._v(" "),_("ul",[_("li",[t._v("由微程序设计者直接指定")]),t._v(" "),_("li",[t._v("由微程序设计者指定的测试判别逻辑字段控制产生")]),t._v(" "),_("li",[t._v("后继地址由两部分组成：\n非测试地址：微程序设计者直接指定的，是不变的，构成微地址的高位部分\n测试地址：在微程序的执行过程中，通过测试一些状态位而动态决定的，它构成微地址的低位部分")]),t._v(" "),_("li",[t._v("测试地址的位数决定了并行分支的路数，而且也决定了测试控制字段的个数")]),t._v(" "),_("li",[t._v("优点：能够实现快速多路转移，提高微程序的执行速度。而且微程序在控存中的存放位置也很灵活、方便。")]),t._v(" "),_("li",[t._v("缺点：后继微地址的生成方法比较复杂，微程序的执行顺序不直观")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c65024792df84c1da3b3487768acfb1d.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d36524eb4c4248eeb56627c81e2ae24b.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/77f4622b769146b5acee8846e98de4e1.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_4-模型机的微指令格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-模型机的微指令格式"}},[t._v("#")]),t._v(" 4.模型机的微指令格式")]),t._v(" "),_("ul",[_("li",[t._v("模型机中确定下一条微指令地址的来源："),_("strong",[t._v("当前微指令地址加1、转移到“取指令”的公共入口、根据指令操作码散转到该指令（或该类指令）的入口")])])]),t._v(" "),_("h1",{attrs:{id:"第十章-运算方法与运算器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第十章-运算方法与运算器"}},[t._v("#")]),t._v(" 第十章 运算方法与运算器")]),t._v(" "),_("h2",{attrs:{id:"_1-移位运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-移位运算"}},[t._v("#")]),t._v(" 1.移位运算")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("逻辑移位")])]),t._v(" "),_("ul",[_("li",[t._v("被移位的数据是逻辑数（无符号，无大小）")]),t._v(" "),_("li",[t._v("逻辑左移shl：按位左移，最高位丢弃，最低位补0")]),t._v(" "),_("li",[t._v("逻辑右移shr：按位右移，最低位丢弃，最高位补0")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/cfc3a7faad3c4143b2e232dc8eaa6d96.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("循环移位")])]),t._v(" "),_("ul",[_("li",[t._v("循环移位中将被移位数据的左右两端连接起来，形成闭合的移位环路")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1d359ec1ad8e4954b526c1e2b1d88b53.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("算术移位")])]),t._v(" "),_("ul",[_("li",[t._v("原码算术移位："),_("strong",[t._v("符号位不参加移位")]),t._v("，只将数值位依次移动，补0")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8841e2d253364f01b790cf116d89068a.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("ul",[_("li",[t._v("补码算术移位：\n算术左移：连同符号位整体左移，最高位（符号位）丢弃，最低位补0\n算术右移：连同符号位整体右移，"),_("strong",[t._v("符号位保持不变")]),t._v("，最低位丢弃")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/1018857ef8b9421992266dcd601e0b2e.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_2-定点数的加减法运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-定点数的加减法运算"}},[t._v("#")]),t._v(" 2.定点数的加减法运算")]),t._v(" "),_("ul",[_("li",[t._v("运算规则：\n设[X]~补~与[Y]~补~均为n位补码数，其中包含一位符号位\n==[X＋Y]~补~＝[X]~补~＋[Y]~补~==\n==[X－Y]~补~＝[X]~补~＋[－Y]~补~    （mod M）==\n如果X、Y是定点小数，则M=2；如果X、Y是定点整数，则M=2^n^")])]),t._v(" "),_("blockquote",[_("p",[t._v("硬件实现：")]),t._v(" "),_("ul",[_("li",[t._v("as为0时，[F]~补~ = [X]~补~＋[Y]~补~")]),t._v(" "),_("li",[t._v("as为1时，[F]~补~ = [X]~补~ - [Y]~补~")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/08cfeae7fa674a5e910e92f79d144530.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[t._v("溢出的判断")]),t._v(" "),_("ul",[_("li",[t._v("分为正溢出（正数）与负溢出（负数）\n三种方法：")])]),t._v(" "),_("ol",[_("li",[t._v("采用两个操作数和结果的符号来判断")])]),t._v(" "),_("ul",[_("li",[t._v("当两个同号数的补码相加，若得到的结果的符号与两个操作数的符号不同，则发生了溢出\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/f06eaa146c174319a19dd40d1edea2d9.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("采用最高数值位产生的进位与符号位产生的进位是否相同来判断，当不相同时，则发生了溢出\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c16439649b7f45c38f89547e67d426c0.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("采用变形补码来判断")])]),t._v(" "),_("ul",[_("li",[t._v("变形补码：两位符号位\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/e11ff8a971374880b88da1e53b9b3eda.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("li",[t._v("当结果的变形补码的两个符号位不同，则溢出")]),t._v(" "),_("li",[t._v("若结果符号位为01，则表示结果为正溢出；若结果符号位为10，则表示结果为负溢出\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8b063c9aec2141399e15ed5989ea4178.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/2cbd059e29bc4b72a6f95a30725c5e5e.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h2",{attrs:{id:"_3-定点数的乘除法运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-定点数的乘除法运算"}},[t._v("#")]),t._v(" 3.定点数的乘除法运算")]),t._v(" "),_("blockquote",[_("p",[t._v("原码一位乘法")]),t._v(" "),_("ul",[_("li",[t._v("符号位单独处理：同号相乘，乘积为正；异号相乘，乘积为负")]),t._v(" "),_("li",[t._v("结果的数值部分是两个数的绝对值相乘，即两个正数相乘\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/75eaeb3687974291b0ca0b6658ef507a.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/3247967a00544eca91ec423561106a37.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/8b4287988129461eb64b64efda5e5a19.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/2ebeae6a0d0e438da0229318c847df0e.png",alt:"在这里插入图片描述"}})])])]),t._v(" "),_("h2",{attrs:{id:"_4-浮点运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-浮点运算"}},[t._v("#")]),t._v(" 4.浮点运算")]),t._v(" "),_("ul",[_("li",[t._v("步骤："),_("strong",[t._v("判0操作、对阶、尾数加/减、规格化、舍入")])])]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("判0操作")])]),t._v(" "),_("ul",[_("li",[t._v("判断两个操作数中是否有为0的，若有则不需要进行运算，直接就能设置运算结果（为0）")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[t._v("对阶")])]),t._v(" "),_("ul",[_("li",[t._v("使小数点对齐")]),t._v(" "),_("li",[t._v("使两个操作数的阶码相等\n求阶差△E＝X~E~－Y~E~\n若△E＞0，则表示X的阶码大于Y的阶码，需调整操作数Y：将Y的尾数Y~M~右移；每右移一位，其阶码Y~E~加1，直到两数的阶码相等为止\n若△E＜0，则表示X的阶码小于Y的阶码，需调整操作数X。调整的方法与上面的一样")])]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("尾数加/减")])]),t._v(" "),_("ul",[_("li",[t._v("按"),_("strong",[t._v("定点加减运算")])])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("结果规格化并判溢出")])]),t._v(" "),_("ul",[_("li",[t._v("若得到的运算结果的绝对值大于1，则需要右规\n将该结果右移一位，相应的阶码加1")]),t._v(" "),_("li",[t._v("若得到的运算结果的绝对值小于1，则需要左规\n将该结果左移，每左移一位，相应的阶码减1，直到运算结果的绝对值大于等于1/2为止")]),t._v(" "),_("li",[t._v("在规格化时，阶码每次加1或减1以后，都要判断阶码是否超出所能表示的范围")])]),t._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[t._v("舍入处理")])]),t._v(" "),_("ul",[_("li",[t._v("0设1入法")]),t._v(" "),_("li",[t._v("截断法")]),t._v(" "),_("li",[t._v("朝＋∞舍入法")]),t._v(" "),_("li",[t._v("朝－∞舍入法")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/092007e619ff4b4287943ebb9b7afcb8.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/e682436d0f084c71a223ab282c77ec4a.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/833229e0f9994b849a693928776e5d34.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/d54c61ba838d4a5e9a63e2dca1aad3bc.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("h2",{attrs:{id:"_5-运算器的构成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-运算器的构成"}},[t._v("#")]),t._v(" 5.运算器的构成")]),t._v(" "),_("ul",[_("li",[t._v("算术运算逻辑单元ALU、寄存器组、数据总线")])]),t._v(" "),_("h1",{attrs:{id:"第十一章-存储器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第十一章-存储器"}},[t._v("#")]),t._v(" 第十一章 存储器")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/a5b7e5971ff64e0b8a490d34136e42f5.png",alt:"在这里插入图片描述"}})]),t._v(" "),_("h2",{attrs:{id:"_1-存储子系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-存储子系统"}},[t._v("#")]),t._v(" 1.存储子系统")]),t._v(" "),_("blockquote",[_("p",[t._v("三级存储系统")]),t._v(" "),_("ul",[_("li",[t._v("Cache：高速缓冲存储器——速度最快，容量最小")]),t._v(" "),_("li",[t._v("主存储器")]),t._v(" "),_("li",[t._v("磁盘存储器（辅存）——速度最慢，容量最大")])])]),t._v(" "),_("blockquote",[_("p",[t._v("两个存储层次")]),t._v(" "),_("ol",[_("li",[t._v("“Cache——主存”层次：解决主存速度不足的问题")])]),t._v(" "),_("ul",[_("li",[t._v("对系统程序员和应用程序员都透明\n2.. “主存——辅存”层次：解决主存容量不足的问题")]),t._v(" "),_("li",[t._v("对系统程序员不透明")])])]),t._v(" "),_("h2",{attrs:{id:"_2-存储器的分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-存储器的分类"}},[t._v("#")]),t._v(" 2.存储器的分类")]),t._v(" "),_("ul",[_("li",[t._v("按计算机系统中的作用分类：主存、辅存、Cache")]),t._v(" "),_("li",[t._v("按存取方式分类：随机存储器RAM、制度存储器ROM、顺序存取存储器SAM")]),t._v(" "),_("li",[t._v("按存储介质分类：半导体存储器、磁表面存储器、光存储器")])]),t._v(" "),_("h2",{attrs:{id:"_3-其他"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-其他"}},[t._v("#")]),t._v(" 3.其他")]),t._v(" "),_("ul",[_("li",[t._v("数据在存储器中的存放：字节顺序、整数边界")]),t._v(" "),_("li",[t._v("主存的主要技术指标："),_("strong",[t._v("存储容量、存取速度、可靠性、功耗")])]),t._v(" "),_("li",[t._v("动态RAM的刷新："),_("strong",[t._v("集中式刷新、分散式刷新、异步式刷新")])]),t._v(" "),_("li",[t._v("并行存储器：单体多字存储器、多体交叉存储器")]),t._v(" "),_("li",[t._v("辅存：磁表面存储器、磁盘存储器、光盘存储器")])]),t._v(" "),_("h2",{attrs:{id:"_4-主存的设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-主存的设计"}},[t._v("#")]),t._v(" 4.主存的设计")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("位扩展法")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/2029d19a1ab54e4691a09fc0a999f786.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"2"}},[_("li",[t._v("字扩展法")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img-blog.csdnimg.cn/c58940df6e0445a2b0efca7a345f94bf.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/7169bf81ac564759a54beeb61cf8d552.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/bbda17be68b94bb5ab2f77d6683094f2.png",alt:"在这里插入图片描述"}})])]),t._v(" "),_("blockquote",[_("ol",{attrs:{start:"3"}},[_("li",[t._v("字和位同时扩展法\n"),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/56d32cb50aa14ac9bf38765bc69529fa.png",alt:"在这里插入图片描述"}}),t._v(" "),_("img",{attrs:{src:"https://img-blog.csdnimg.cn/b253d12ba0284a689cdbe2d00eb55136.png",alt:"在这里插入图片描述"}})])])])])}),[],!1,null,null,null);_.default=l.exports}}]);