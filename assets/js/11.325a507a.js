(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{335:function(s,a,t){"use strict";t.r(a);var n=t(1),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第1章-绪论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第1章-绪论"}},[s._v("#")]),s._v(" 第1章 绪论")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307120714.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_1-1-数据结构基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据结构基本概念"}},[s._v("#")]),s._v(" 1.1 数据结构基本概念")]),s._v(" "),a("h3",{attrs:{id:"_1-1-1-基本概念和术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-基本概念和术语"}},[s._v("#")]),s._v(" 1.1.1 基本概念和术语")]),s._v(" "),a("ul",[a("li",[s._v("数据：信息的载体")]),s._v(" "),a("li",[s._v("数据元素：数据的基本单位，可由若干数据项组成")])]),s._v(" "),a("blockquote",[a("p",[s._v("如：学生记录是一个数据元素，由学号、姓名等数据项组成")])]),s._v(" "),a("ul",[a("li",[s._v("数据项：构成数据元素的不可分割的最小单位")]),s._v(" "),a("li",[s._v("数据对象：==具有相同性质==的数据元素的集合，是数据的一个子集")]),s._v(" "),a("li",[s._v("数据结构：相互之间存在一种或多种特定关系是数据元素的集合。数据元素相互之间的关系称为"),a("strong",[s._v("结构")])]),s._v(" "),a("li",[s._v("抽象数据类型(ADT)：定义一个ADT就是定义了数据的逻辑结构、数据的运算，也就是定义了一个数据结构")]),s._v(" "),a("li",[s._v("==数据结构三要素==：逻辑结构、存储结构、数据的运算")]),s._v(" "),a("li",[s._v("一个算法的设计取决于所选定的逻辑结构，二算法的实现依赖于所用的存储结构")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_1-1-2-数据结构三要素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-数据结构三要素"}},[s._v("#")]),s._v(" 1.1.2 数据结构三要素")]),s._v(" "),a("ol",[a("li",[s._v("逻辑结构")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("==与数据的存储无关，是独立于计算机的==")]),s._v(" "),a("li",[s._v("分为线性结构和非线性结构\n"),a("ul",[a("li",[s._v("线性结构：数据元素之间只存在一对一的关系")]),s._v(" "),a("li",[s._v("非线性结构：数据元素之间存在一对多的关系")])])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307121435.png",alt:""}})])]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("存储结构")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("包括数据元素的表示和关系的表示")]),s._v(" "),a("li",[s._v("是用计算机语言实现的逻辑结构，依赖于计算机语言")]),s._v(" "),a("li",[s._v("有顺序存储、链式存储、索引存储、散列存储(哈希存储)")])])]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("数据的运算")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("包括运算的定义和实现")]),s._v(" "),a("li",[s._v("运算的定义是针对逻辑结构的")]),s._v(" "),a("li",[s._v("运算的实现是针对存储结构的")])])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"习题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#习题"}},[s._v("#")]),s._v(" 习题")]),s._v(" "),a("ol",[a("li",[s._v("有序表是指关键字有序的线性表，仅描述元素之间的逻辑关系，既可以链式存储，也可以顺序存储，属于==逻辑结构==")]),s._v(" "),a("li",[s._v("逻辑结构独立于存储结构，存储结构不能独立于逻辑结构而存在")]),s._v(" "),a("li",[s._v("循环队列是用顺序表表示的队列，是一种==数据结构==")]),s._v(" "),a("li",[s._v("栈是一种抽象数据类型，可以采用顺序存储或链式存储，只表示==逻辑结构==")]),s._v(" "),a("li",[s._v("存储数据要存储数据元素的值和数据元素之间的关系")]),s._v(" "),a("li",[s._v("==链式存储设计时，各个不同结点的存储空间可以不连续，但结点内的存储单元地址必须连续==\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307122459.png",alt:""}})])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_1-2-算法和算法评价"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-算法和算法评价"}},[s._v("#")]),s._v(" 1.2 算法和算法评价")]),s._v(" "),a("h3",{attrs:{id:"_1-2-1-算法的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-算法的基本概念"}},[s._v("#")]),s._v(" 1.2.1 算法的基本概念")]),s._v(" "),a("ul",[a("li",[s._v("算法是对特定问题求解步骤的一种描述，是指令的有限序列，其中的每条指令表示一个或多个操作")])]),s._v(" "),a("blockquote",[a("p",[s._v("==算法的特性：==")]),s._v(" "),a("ol",[a("li",[s._v("有穷性：算法必须是有穷的，而程序可以是无穷的")]),s._v(" "),a("li",[s._v("确定性：对相同的输入只能得到相同的输出")]),s._v(" "),a("li",[s._v("可行性")]),s._v(" "),a("li",[s._v("输入：可以有零个或多个输入")]),s._v(" "),a("li",[s._v("输出：至少有一个输出")])])]),s._v(" "),a("blockquote",[a("p",[s._v("算法的目标：")]),s._v(" "),a("ol",[a("li",[s._v("正确性")]),s._v(" "),a("li",[s._v("可读性")]),s._v(" "),a("li",[s._v("健壮性")]),s._v(" "),a("li",[s._v("高效率与低存储需求")])])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_1-2-2-算法效率的度量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-算法效率的度量"}},[s._v("#")]),s._v(" 1.2.2 算法效率的度量")]),s._v(" "),a("ol",[a("li",[s._v("时间复杂度")])]),s._v(" "),a("ul",[a("li",[s._v("依赖于问题的规模n和待输入数据的性质(如输入数据元素的初始状态)")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307123156.png",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"非递归算法的效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非递归算法的效率"}},[s._v("#")]),s._v(" 非递归算法的效率")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307133451.png",alt:""}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/27cbb1488560d5c681fa2c6dec8fb16.jpg",alt:""}})]),s._v(" "),a("h4",{attrs:{id:"递归算法的效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归算法的效率"}},[s._v("#")]),s._v(" 递归算法的效率")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307133812.png",alt:""}})]),s._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307133925.png",alt:""}}),s._v(" "),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230307133940.png",alt:""}})])]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("空间复杂度")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"习题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#习题-2"}},[s._v("#")]),s._v(" 习题")]),s._v(" "),a("ul",[a("li",[s._v("求归并排序时间复杂度\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230312201724.png",alt:""}})])]),s._v(" "),a("hr"),s._v(" "),a("h1",{attrs:{id:"第2章-线性表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第2章-线性表"}},[s._v("#")]),s._v(" 第2章 线性表")]),s._v(" "),a("h2",{attrs:{id:"_2-1-线性表的定义与基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线性表的定义与基本操作"}},[s._v("#")]),s._v(" 2.1 线性表的定义与基本操作")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("线性表的定义：具有"),a("strong",[s._v("相同特征")]),s._v("的数据元素的一个"),a("strong",[s._v("有限")]),s._v("序列")])]),s._v(" "),a("li",[a("p",[s._v("线性表的"),a("strong",[s._v("长度可以为0")]),s._v("，表示一个空表")])]),s._v(" "),a("li",[a("p",[s._v("存储结构：顺序存储（顺序表）和链式存储（链表）两种")])]),s._v(" "),a("li",[a("p",[s._v("线性表的基本操作\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316130938.png",alt:""}})])])]),s._v(" "),a("h3",{attrs:{id:"知识回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识回顾"}},[s._v("#")]),s._v(" 知识回顾")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316131027.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-2-顺序表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-顺序表"}},[s._v("#")]),s._v(" 2.2 顺序表")]),s._v(" "),a("h3",{attrs:{id:"_2-2-1-顺序表的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-顺序表的定义"}},[s._v("#")]),s._v(" 2.2.1 顺序表的定义")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316132537.png",alt:""}})]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_2-2-2-顺序表的基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-顺序表的基本操作"}},[s._v("#")]),s._v(" 2.2.2 顺序表的基本操作")]),s._v(" "),a("ul",[a("li",[s._v("插入\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316133702.png",alt:""}})]),s._v(" "),a("li",[s._v("删除\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316133719.png",alt:""}})]),s._v(" "),a("li",[s._v("查找\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316155343.png",alt:""}})])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-3-链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-链表"}},[s._v("#")]),s._v(" 2.3 链表")]),s._v(" "),a("h3",{attrs:{id:"_2-3-1-单链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-单链表"}},[s._v("#")]),s._v(" 2.3.1 单链表")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("头插法建立\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316165134.png",alt:""}})])]),s._v(" "),a("li",[a("p",[s._v("尾插法建立\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316164730.png",alt:""}})])]),s._v(" "),a("li",[a("p",[s._v("插入\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316160834.png",alt:""}})])])]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("后插\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316162749.png",alt:""}})]),s._v(" "),a("li",[s._v("前插\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316162955.png",alt:""}})])])]),s._v(" "),a("ul",[a("li",[s._v("删除\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230316163128.png",alt:""}})])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_2-3-2-双链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-双链表"}},[s._v("#")]),s._v(" 2.3.2 双链表")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("插入\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230330120813.png",alt:""}})])]),s._v(" "),a("li",[a("p",[s._v("删除\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230330121126.png",alt:""}})])])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_2-3-3-循环链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-循环链表"}},[s._v("#")]),s._v(" 2.3.3 循环链表")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"_2-3-4-静态链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-静态链表"}},[s._v("#")]),s._v(" 2.3.4 静态链表")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"顺序表与链表的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序表与链表的比较"}},[s._v("#")]),s._v(" 顺序表与链表的比较")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-1-线性表的基本概念与实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-线性表的基本概念与实现"}},[s._v("#")]),s._v(" 2.1 线性表的基本概念与实现")]),s._v(" "),a("ul",[a("li",[s._v("线性表的定义：具有"),a("strong",[s._v("相同特征")]),s._v("的数据元素的一个"),a("strong",[s._v("有限")]),s._v("序列")]),s._v(" "),a("li",[s._v("线性表的"),a("strong",[s._v("长度可以为0")]),s._v("，表示一个空表")]),s._v(" "),a("li",[s._v("存储结构：顺序存储（顺序表）和链式存储（链表）两种")])]),s._v(" "),a("h3",{attrs:{id:"顺序表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序表"}},[s._v("#")]),s._v(" 顺序表")]),s._v(" "),a("ul",[a("li",[s._v("随机访问")]),s._v(" "),a("li",[s._v("占用连续的存储空间")]),s._v(" "),a("li",[s._v("不方便增、删")])]),s._v(" "),a("h3",{attrs:{id:"链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[s._v("#")]),s._v(" 链表")]),s._v(" "),a("ul",[a("li",[s._v("不支持随机访问")]),s._v(" "),a("li",[s._v("存储空间利用率较低")]),s._v(" "),a("li",[s._v("支持存储空间的动态分配")])]),s._v(" "),a("ol",[a("li",[s._v("单链表")]),s._v(" "),a("li",[s._v("双链表")]),s._v(" "),a("li",[s._v("循环单链表")]),s._v(" "),a("li",[s._v("循环双链表")]),s._v(" "),a("li",[s._v("静态链表（数组）")])]),s._v(" "),a("h3",{attrs:{id:"顺序表与链表的比较-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序表与链表的比较-2"}},[s._v("#")]),s._v(" 顺序表与链表的比较")]),s._v(" "),a("ol",[a("li",[s._v("存储分配的方式：\n顺序表的存储空间是一次性分配的\n链表的存储空间是多次分配的")]),s._v(" "),a("li",[s._v("存储密度：\n顺序表存储密度 = 1\n链表存储密度 > 1")]),s._v(" "),a("li",[s._v("存取方式：\n顺序表可随机存取\n链表只能顺序存取")]),s._v(" "),a("li",[s._v("插入/删除\n顺序表需要移动多个元素\n链表不需要移动元素，只用修改指针")])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_2-2-线性表基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-线性表基本操作"}},[s._v("#")]),s._v(" 2.2 线性表基本操作")]),s._v(" "),a("p",[s._v("这里只选取了个人认为比较重点的内容，有部分基础性的内容没有整理")]),s._v(" "),a("h3",{attrs:{id:"顺序单链表-带头结点-a和b合并为一个顺序单链表c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序单链表-带头结点-a和b合并为一个顺序单链表c"}},[s._v("#")]),s._v(" 顺序单链表（带头结点）A和B合并为一个顺序单链表C")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void merge(LNode *A,LNode *B,LNode *&C)\n{\n    LNode *p = A->next; //p跟踪A的最小值结点\n    LNode *q = B->next; //q跟踪B的最小值结点\n    LNode *r;   //r跟踪C的终端结点\n    C = A;  //将A的头结点设定为C的头结点\n    C->next = NULL;\n    r = C;\n    free(B);    //释放B的头结点\n    \n    while(p != NULL && q != NULL)\n    {\n        if(p->data <= q->data)\n        {\n            r->next = p;\n            p = p->next;\n            r = r->next;\n        }\n        else\n        {\n            r->next = q;\n            q = q->next;\n            r = r->next;\n        }\n    }\n\n    r->next = NULL;\n    //将剩下的直接连接到C的末尾\n    if(p != NULL)\n        r->next = p;\n    if(q != NULL)\n        r->next = q;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("h3",{attrs:{id:"尾插法建立链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尾插法建立链表"}},[s._v("#")]),s._v(" 尾插法建立链表")]),s._v(" "),a("ul",[a("li",[s._v("将数组a中的n个元素用尾插法建立链表C")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230312213527.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void creatlistR(LNode *&C,int a[],int n)\n{\n    LNode *s,*r;    //s指向新申请的节点，r指向C的终端结点\n    int i;\n    C = (LNode *)malloc(sizeof(LNode)); //申请C的头结点空间\n    C->next = NULL;\n    r = C;\n    for(i = 0; i < n; i++)\n    {\n        s = (LNode *)malloc(sizeof(LNode));\n        s->data = a[i];\n        r->next = s;\n        r = r->next;\n    }\n    r->next = NULL;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"头插法建立链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头插法建立链表"}},[s._v("#")]),s._v(" 头插法建立链表")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230312213501.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void creatlistF(LNode *&C,int a[],int n)\n{\n    LNode *s;\n    int i;\n    C = (LNode *)malloc(sizeof(LNode)); //申请C的头结点空间\n    C->next = NULL;\n    for(i = 0; i < n; i++)\n    {\n        s = (LNode *)malloc(sizeof(LNode));\n        s->data = a[i];\n        //下面两句是头插法的关键\n        s->next = C->next;  //s所指新节点的指针域next指向C中的开始结点\n        C->next = s;    //头结点的指针域next指向s结点，是的s成为新的开始结点\n    }\n    r->next = NULL;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"尾插法与头插法的图解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尾插法与头插法的图解"}},[s._v("#")]),s._v(" 尾插法与头插法的图解")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_46629453/article/details/125643226",target:"_blank",rel:"noopener noreferrer"}},[s._v("【数据结构】：单链表之头插法和尾插法（动图+图解）"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"尾插法建立双链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尾插法建立双链表"}},[s._v("#")]),s._v(" 尾插法建立双链表")]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void creatDlistR(LNode *&C,int a[],int n)\n{\n    LNode *s,*r;    //s指向新申请的节点，r指向C的终端结点\n    int i;\n    C = (LNode *)malloc(sizeof(LNode)); //申请C的头结点空间\n    C->prior = NULL;\n    C->next = NULL;\n    r = C;\n    for(i = 0; i < n; i++)\n    {\n        s = (LNode *)malloc(sizeof(LNode));\n        s->data = a[i];\n        r->next = s;\n        //开始与单链表不同\n        s->prior = r;\n        r = s;\n    }\n    r->next = NULL;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"双链表的插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双链表的插入"}},[s._v("#")]),s._v(" 双链表的插入")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230312213555.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("s->next = p->next;\ns->prior = p;\np->next = s;\ns->next->prior = s;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"双链表的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双链表的删除"}},[s._v("#")]),s._v(" 双链表的删除")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20230312214230.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language-c++ line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("q = p->next;\np->next = q->next;\nq->next->prior = p;\nfree(q);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"逆置问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逆置问题"}},[s._v("#")]),s._v(" 逆置问题")]),s._v(" "),a("ol",[a("li",[s._v("将长度为n的数组的前端k个元素逆序后移动到数组后端，要求原数组中的数据")])])])}),[],!1,null,null,null);a.default=r.exports}}]);