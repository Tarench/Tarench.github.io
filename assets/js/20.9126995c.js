(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{344:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("经典书籍 《Java编程思想（第4版）\nThinking in Java\n前置知识：C/C++")]),s._v(" "),t("p",[s._v("感觉中文版有些地方翻译的很绕口，英文版又看的比较慢....\n所以按照自己的理解写的笔记，不是单纯的把书上的知识点摘抄下来\n")]),s._v(" "),t("p",[s._v("按照惯例先来个Hello Word!")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, World!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h1",{attrs:{id:"第1章-对象导论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第1章-对象导论"}},[s._v("#")]),s._v(" 第1章 对象导论")]),s._v(" "),t("h2",{attrs:{id:"_1-1-抽象过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-抽象过程"}},[s._v("#")]),s._v(" 1.1 抽象过程")]),s._v(" "),t("ul",[t("li",[s._v("汇编语言是对底层机器的轻微抽象，接着出现的许多所谓“命令式”语言(FORTRAN, BASIC, C/C++等)都是对汇编语言的抽象。但它们所作的主要抽象仍要求在解决问题时要"),t("strong",[s._v("基于计算机的结构")]),s._v("，而不是"),t("strong",[s._v("基于所要解决的问题的结构")]),s._v("来考虑")])]),s._v(" "),t("blockquote",[t("p",[s._v("OOP语言的五个基本特性：")]),s._v(" "),t("ol",[t("li",[s._v("万物皆为对象：将对象视为奇特的变量，它可以存储数据，除此之外，你还可以要求它在自身上执行操作")]),s._v(" "),t("li",[s._v("程序是对象的集合：它们通过发送消息来告知彼此所要做的\n"),t("ul",[t("li",[s._v("可以把消息想像为对某个特定对象的方法的调用请求")])])]),s._v(" "),t("li",[s._v("每个对象都有自己的由其他对象所构成的存储：可以通过创建包含现有对象的包的方式来创建新类的对象")]),s._v(" "),t("li",[s._v("每个对象都有其类：每个对象都是某个类（class）的一个实例（instance）\n"),t("ul",[t("li",[s._v("每个类最重要的区别于其他类的特性就是“可以发送什么样的消息给它”")])])]),s._v(" "),t("li",[s._v("某一特定类的所有对象都可以接收同样的消息：可替代性(substitutability)")])])]),s._v(" "),t("ul",[t("li",[s._v("对象具有"),t("strong",[s._v("状态、行为和标识")]),s._v("。这意味着每一个对象都可以拥有内部数据（它们给出了该对象的状态）和方法（它们产生行为），并且每一个对象都可以唯一地与其他对象区分开来(每个对象对应内存中唯一的地址)")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-2-每个对象都有一个接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-每个对象都有一个接口"}},[s._v("#")]),s._v(" 1.2 每个对象都有一个接口")]),s._v(" "),t("blockquote",[t("p",[s._v('拿"银行出纳员问题(bank teller problem)"来形象的举例：')]),s._v(" "),t("ul",[t("li",[s._v("对象：出纳、客户、账户、交易、货币单元等")]),s._v(" "),t("li",[s._v("在程序执行期间具有不同的状态而其他方面都相似的对象会被分组到对象的类中")]),s._v(" "),t("li",[s._v("每个类的成员/元素都有某种共性：每个账户都有结余金额，每个出纳都可以处理存款请求等")]),s._v(" "),t("li",[s._v("每个成员都有其自身的状态：每个账户都有不同的金额，每个出纳都有自己的姓名等，都可以在计算机程序中被表示为唯一的实体")]),s._v(" "),t("li",[s._v("这些实体就是对象，每个对象都属于某个特定的类，每个类都有其特性和行为")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("类实际上就是一个数据模型：描述了具有相同特性(数据元素)和行为(功能)的对象集合。程序员可以通过定义类来适应问题，而不是只能使用现有的数据类")])]),s._v(" "),t("li",[t("p",[s._v("接口(interface)：对象能接收的请求，或者说可以完成的功能\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220923112457.png",alt:""}})])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Light")]),s._v(" lt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Light")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nlt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("在这个例子中：")]),s._v(" "),t("ul",[t("li",[s._v("类名为Light，一个对象叫作lt")]),s._v(" "),t("li",[s._v("可以向Light发出的请求为On, off, brighten, dim")])]),s._v(" "),t("p",[s._v("创建Light对象的方式：")]),s._v(" "),t("ol",[t("li",[s._v('定义这个对象的"引用" lt')]),s._v(" "),t("li",[s._v("调用new来创建这个类的新对象")]),s._v(" "),t("li",[s._v("为了向对象发送消息，需要声明对象的名称，并以'.'符号链接一个消息请求")])])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-3-每个对象都提供服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-每个对象都提供服务"}},[s._v("#")]),s._v(" 1.3 每个对象都提供服务")]),s._v(" "),t("ul",[t("li",[s._v("将对象想象为服务提供者")]),s._v(" "),t("li",[s._v("不要向一个对象中塞进过多的功能")])]),s._v(" "),t("h2",{attrs:{id:"_1-4-被隐藏的具体实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-被隐藏的具体实现"}},[s._v("#")]),s._v(" 1.4 被隐藏的具体实现")]),s._v(" "),t("ul",[t("li",[s._v("public：对任何人都可用")]),s._v(" "),t("li",[s._v("private：除类创建者和类的内部方法之外的人都不能访问")]),s._v(" "),t("li",[s._v("protected：在private的基础上，继承的类也能访问protected的成员")])]),s._v(" "),t("h2",{attrs:{id:"_1-5-继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-继承"}},[s._v("#")]),s._v(" 1.5 继承")]),s._v(" "),t("ul",[t("li",[s._v("以现有的类为基础，复制它，然后通过添加和修改这个副本来创建新类")]),s._v(" "),t("li",[s._v("源类（被称为基类、超类或父类）发生变动时，被修改的“副本”（被称为导出类、继承类或子类）也会反映出这些变动")])]),s._v(" "),t("blockquote",[t("p",[s._v("以垃圾回收机为例，它用来归类散落的垃圾。“垃圾”是基类，每一件垃圾都有重量、价值等特性，可以被切碎、熔化或分解。在此基础上，可以通过添加额外的特性（例如瓶子有颜色）或行为（例如铝罐可以被压碎，铁罐可以被磁化）导出更具体的垃圾类。此外，某些行为可能不同（例如纸的价值取决于其类和状态）。可以通过使用继承来构建一个类层次结构，以此来表示待求解的某种类的问题")]),s._v(" "),t("p",[s._v("第二个例子是经典的几何形的例子，这在计算机辅助设计系统或游戏仿真系统中可能被用到。基类是几何形，每一个几何形都具有尺寸、颜色、位置等，同时每一个几何形都可以被绘制、擦除、移动和着色等。在此基础上，可以导出（继承出）具体的几何形状——圆形、正方形、三角形等——每一种都具有额外的特性和行为，例如某些形状可以被翻转。某些行为可能并不相同，例如计算几何形状的面积。类层次结构同时体现了几何形状之间的相似性和差异性\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924095221.png",alt:""}})])]),s._v(" "),t("blockquote",[t("p",[s._v("使基类与导出类昌盛差异的方法：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("直接在导出类中添加新方法\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924095437.png",alt:""}})])]),s._v(" "),t("li",[t("p",[s._v("改变现有基类的方法，称为"),t("strong",[s._v("覆盖(overriding)")]),s._v(" "),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924095551.png",alt:""}})])])])]),s._v(" "),t("h3",{attrs:{id:"is-a-or-is-ike-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#is-a-or-is-ike-a"}},[s._v("#")]),s._v(" 'is-a' or 'is-ike-a'")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("is-a：可以用一个导出类对象来完全替代一个基类对象，可以被视为纯粹替代。称之为代替规则。将这种情况下的基类与导出类之间的关系称为is-a e.g.")]),s._v(" "),t("ul",[t("li",[s._v("“一个圆形就是一个几何形状”")])])]),s._v(" "),t("li",[t("p",[s._v("is-like-a：有时必须在导出类中添加新的接口元素，这样也就扩展了接口。这个新的类仍然可以替代基类，但是这种替代并不完美，因为基类无法访问新添加的方法")]),s._v(" "),t("ul",[t("li",[s._v("e.g. 假设房子里已经布线安装好了所有的冷气设备的控制器，也就是说，房子具备了让你控制冷气设备的接口。想像一下，如果空调坏了，你用一个既能制冷又能制热的热力泵替换了它，那么这个热力泵就is-like-a空调，但是它可以做更多的事。因为房子的控制系统被设计为只能控制冷气设备，所以它只能和新对象中的制冷部分进行通信。尽管新对象的接口已经被扩展了，但是现有系统除了原来接口之外，对其他东西一无所知\n"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924100209.png",alt:""}})]),s._v(" "),t("li",[s._v("在看过这个设计之后，很显然会发现，制冷系统这个基类不够一般化，应该将其更名为“温度控制系统”，使其可以包括制热功能，这样就可以套用替代原则了")])])])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-6-伴随多态的可互换对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-伴随多态的可互换对象"}},[s._v("#")]),s._v(" 1.6 伴随多态的可互换对象")]),s._v(" "),t("ul",[t("li",[s._v("在处理类时，经常不将一个对象当做其基类的特殊类，而是将其当做其基类的对象来对待，这样写出的代码就不依赖于特定类型")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924101945.png",alt:""}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("后期绑定")]),s._v("：当向对象发送消息时，被调用的代码直到运行时才能确定。编译器确保被调用方法的存在，并对调用参数和返回值执行类型检查（无法提供此类保证的语言被称为是弱类型的），但是并不知道将被执行的确切代码")]),s._v(" "),t("li",[s._v("Java用"),t("strong",[s._v("多态")]),s._v("解决这种问题")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-7-单根继承结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-单根继承结构"}},[s._v("#")]),s._v(" 1.7 单根继承结构")]),s._v(" "),t("ul",[t("li",[s._v("所有的类最终都继承自一个基类：Object")]),s._v(" "),t("li",[s._v("在单根继承结构中的所有对象都具有一个共用接口，所以它们归根到底都是相同的基本类型")]),s._v(" "),t("li",[s._v("单根继承结构保证所有对象都具备某些功能")]),s._v(" "),t("li",[s._v("单根继承结构使垃圾回收器的实现变得容易得多，由于所有对象都保证具有其类型信息，因此不会因无法确定对象的类型而陷入僵局。这对于系统级操作（如异常处理）显得尤其重要，并且给编程带来了更大的灵活性")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-8-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-容器"}},[s._v("#")]),s._v(" 1.8 容器")]),s._v(" "),t("ul",[t("li",[s._v("任何需要时都可扩充自己以容纳你置于其中的所有东西。")]),s._v(" "),t("li",[s._v("不需要知道将来会把多少个对象置于容器中，只需要创建一个容器对象，然后让它处理所有细节")]),s._v(" "),t("li",[s._v("如List（用于存储序列），Map（也被称为关联数组，用来建立对象之间的关联），Set（每种对象类型只持有一个），以及诸如队列、树、堆栈等更多的构件")]),s._v(" "),t("li",[s._v("在Java SE5后增加了"),t("strong",[s._v("泛型")]),s._v('的概念，一对尖括号，中间包含类型信息，通过这些特征就可以识别对范型的使用。实现"向下转型"\n'),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Tarench/image@master/20220924103605.png",alt:""}})])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-9-对象的创建和生命期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-对象的创建和生命期"}},[s._v("#")]),s._v(" 1.9 对象的创建和生命期")]),s._v(" "),t("ul",[t("li",[s._v("Java完全采用了动态内存分配方式。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例")]),s._v(" "),t("li",[s._v("Java提供了被称为 "),t("strong",[s._v("“垃圾回收器”")]),s._v(" 的机制，它可以自动发现对象何时不再被使用，并继而销毁它\nps.比C++方便很多")])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"_1-10-异常处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-10-异常处理"}},[s._v("#")]),s._v(" 1.10 异常处理")]),s._v(" "),t("ul",[t("li",[s._v("异常是一种对象，它从出错地点被“抛出”，并被专门设计用来处理特定类型错误的相应的异常处理器“捕获”")]),s._v(" "),t("li",[s._v("Java一开始就内置了异常处理，而且强制你必须使用它。它是唯一可接受的错误报告方式")])]),s._v(" "),t("hr"),s._v(" "),t("h1",{attrs:{id:"第2章-一切皆为对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第2章-一切皆为对象"}},[s._v("#")]),s._v(" 第2章 一切皆为对象")]),s._v(" "),t("h2",{attrs:{id:"_2-1-用引用操纵对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-用引用操纵对象"}},[s._v("#")]),s._v(" 2.1 用引用操纵对象")]),s._v(" "),t("h2",{attrs:{id:"第15章-泛型-genetics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第15章-泛型-genetics"}},[s._v("#")]),s._v(" 第15章 泛型(Genetics)")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("实现了参数化类的概念，使代码能够应用于多种类")])]),s._v(" "),t("li",[t("p",[s._v("类参数：用<>括起，放在类名后，在使用这个类时，再用实际的类替换此类参数")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//: generics/Holder.java")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Automobile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Holder")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Holder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Holder")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Automobile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" h "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Holder")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Automobile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nrw "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Automobile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Automobile")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("ul",[t("li",[s._v("告诉编译器想使用什么类，然后它帮你处理一切细节")]),s._v(" "),t("li",[s._v("使用泛型时，只需要指定名称和参数列表")])])])}),[],!1,null,null,null);t.default=e.exports}}]);